{
	"name": "BrachActivityDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeDataDataSet",
						"type": "DatasetReference"
					},
					"name": "Employees"
				},
				{
					"dataset": {
						"referenceName": "DepartmentDataDataSet",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "TotalEmployeesByDept"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          { name} as string,",
				"          { country} as string,",
				"          { department} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employees",
				"source(output(",
				"          depid as string,",
				"          { depname} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"Employees aggregate(groupBy({ department}),",
				"     { TotalEmployees} = count(empid)) ~> aggregate1",
				"Employees, Department join({ department} == depid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmployeesDeptData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     header: (['Empid','Name','Country','DeptName']),",
				"     mapColumn(",
				"          empid,",
				"          { name},",
				"          { country},",
				"          { depname}",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['TotalEmployeesByDept.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     header: (['Department','TotalEmployees']),",
				"     mapColumn(",
				"          { department},",
				"          { TotalEmployees}",
				"     ),",
				"     partitionBy('hash', 1)) ~> TotalEmployeesByDept"
			]
		}
	}
}